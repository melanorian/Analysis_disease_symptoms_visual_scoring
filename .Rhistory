# 1. clean environment
rm(list=ls())
# 2. open libraries
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readxl)
library(plotly)
library(tidy)
# 2. open libraries
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readxl)
library(plotly)
library(tidyr)
# A) General basics ----
# 1. clean environment
rm(list=ls())
# 2. open libraries
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readxl)
library(plotly)
library(tidyr)
# 3. set working directory
setwd("C:/Users/Mende012/Documents/Bioinformatics/Cell_death/Analysis_disease_symptoms_visual_scoring")
# 4. load file
df <- read_xlsx("MM20230516_summary_visual_score_cell_death.xlsx")
# B) get data(frame) into desired shape ----
# 5. rename columns and select only relevant columns
df <- data.frame("date_infiltration" = df$`Date infiltartion`,
"Effector_line" = df$`Effector line`,
"nr_score_0" = df$disease_score_0,
"nr_score_1" = df$disease_score_1,
"nr_score_2" = df$disease_score_2,
"nr_score_3" = df$disease_score_3,
"nr_score_4" = df$disease_score_4,
"nr_infiltration_spots" = df$`n (infiltration spots)`,
"avg_score" = df$`average disease score`)
# drop first row that only contains numbers of disease scores
df <- df[!(rownames(df) == '1'),]
# C) calculate the percentages of disease score incidences ----
# 6. create input vectors
# vector of row numbers
rows <- as.vector(1:length(df$Effector_line))
# Vector of colnames containing scores
n_scores <- grep("nr_score_", colnames(df), value = TRUE)
## 7. Design a function that can calculate the percentage of infiltration spots
# that was scored with a specific disease severity. Run the function to obtain a
# list of values.
result_perc <- do.call(cbind, lapply(n_scores, function(score) {
t(sapply(rows, function(row_nr) {
nr_sum <- df$nr_infiltration_spots[row_nr]
nr_score <- df[[score]][row_nr]
perc <- (nr_score / nr_sum) * 100
return(perc)
}))
})) %>% t()
# 8. Convert the original df to a long format so that the % results can be added
# 8.1 Convert the dataframe from wide to long format
df_long <- tidyr::pivot_longer(df,
cols = starts_with("nr_score_"),
names_to = "variable",
values_to = "value")
df_long
View(df_long)
# 8. Convert the original df to a long format so that the % results can be added
# 8.1 Convert the dataframe from wide to long format
df_long <- tidyr::pivot_longer(df,
cols = starts_with("nr_score_"),
names_to = "disease_score",
values_to = "count")
View(df_long)
View(df_long)
colnames(df_long)
View(df)
View(df)
# Sort the dataframe by the "date" and "variable" columns in ascending order
df_sorted <- arrange(df_long, disease_score, date_infiltration, Effector_line, variable)
# Sort the dataframe by the "date" and "variable" columns in ascending order
df_sorted <- arrange(df_long, disease_score, date_infiltration, Effector_line)
df_sorted
View(result_perc)
View(result_perc)
View(df_sorted)
View(df_sorted)
# 8.2 add the % (output of 7.) to the df_sorted, make EXTRA sure they are in the
#     correct order
df_sorted$res_perc <- res_perc
# 8.2 add the % (output of 7.) to the df_sorted, make EXTRA sure they are in the
#     correct order
df_sorted$res_perc <- result_perc
View(df_sorted)
View(df_sorted)
View(df_sorted)
View(df_sorted)
colnames(df_sorted)
View(df_sorted)
View(df_sorted)
typeof(df_sorted$Effector_line)
ggplot(df_sorted, aes(x = Effector_line, y = res_perc, fill = disease_score)) +
geom_bar(stat = "identity")
View(df_sorted)
# E)
simple_df <- data.frame(df_sorted$Effector_line, df_sorted$disease_score, df_sorted$count)
View(simple_df)
View(simple_df)
colnames(simple_df)
ggp <- ggplot(simple_df,            # Create ggplot2 plot scaled to 1.00
aes(x = df_sorted.Effector_line,
y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity")
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c"#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#009E73", "#ffeabc", "#ffbe2d", "#E69F00","#e69f00" ))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#ffffff", "#ffeabc", "#ffbe2d", "#E69F00","#e69f00" ))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#fff5e0", "#ffeabc", "#ffbe2d", "#E69F00","#e69f00" ))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00","#e69f00" ))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#ffbc25" , "#E69F00", "#D55E00"))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#ffbc25" , "#E69F00", "#D55E00"))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00"))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black")) +
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 10))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 0.1))
ggp                                 # Draw ggplot2 plot scaled to 1.00
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggp                                 # Draw ggplot2 plot scaled to 1.00
print(current_date)
current_date <- Sys.Date()
# Print the current date
print(current_date)
current_date
print(MM, current_date)
View(df)
View(df)
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
# label individual bars
geom_text(aes(label = df_sorted$nr_infiltration_spots), vjust = -0.5)
ggp                                 # Draw ggplot2 plot scaled to 1.00
length(unique(simple_df$df_sorted.Effector_line))
# get a list of all the unique effector lines
e_lines <- unique(df$Effector_line)
e_lines
colnames(df)
a <- df[(df$Effector_line == "AAAD36E"),]
a
sum_d <-  lapply(e_lines, function(x){ # sum up of cell-death POSITIVE
a <- df[(df$Effector_line == x),] # subset datset by effector line
b <- sum(a$nr_infiltration_spots) # sum infiltration spots WITH cell death
return(b)
}) %>% unlist()
sum_d
df
e_lines
sum_d <-  lapply(e_lines, function(x){ # sum up of cell-death POSITIVE
a <- df[(df$Effector_line == x),] # subset datset by effector line
b <- sum(a$nr_infiltration_spots) # sum infiltration spots WITH cell death
return(b)
}) %>% unlist()
sum_d
simple_df_d <- as.data.frame(cbind(unlist(e_lines), as.numeric(sum_d))) # df cell death
simple_df_d
# draw stagged bar graph
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
# label individual bars
geom_text(aes(label = simple_df_d$V2), vjust = -0.5)
# get a list of all the unique effector lines
e_lines <- unique(df$Effector_line)
# draw stagged bar graph
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
# label individual bars
geom_text(aes(label = simple_df_d$V2), vjust = -0.5)
ggp                                 # Draw ggplot2 plot scaled to 1.00
simple_df_d$V2
nrow(simple_df_d)
aes(label = simple_df_d$V2
simple_df_d$V2
simple_df_d$V2
ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
# label individual bars
geom_text(aes(label = simple_df_d$V2), vjust = -0.5)
rlang::last_error()
labels <- simple_df_d$V2
labels
# draw stagged bar graph
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
# label individual bars
geom_text(aes(label = labels), vjust = -0.5)
ggp                                 # Draw ggplot2 plot scaled to 1.00
# draw stagged bar graph
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
# label individual bars
geom_text(size = 3, position = position_stack(vjust = 0.5))
ggp                                 # Draw ggplot2 plot scaled to 1.00
# draw stagged bar graph
ggp <- ggplot(simple_df, aes(x = df_sorted.Effector_line, y = df_sorted.count,
fill = df_sorted.disease_score)) +
geom_bar(position = "fill", stat = "identity") +
# asign colours
scale_fill_manual(values = c("#fffbf1", "#ffeabc", "#ffbe2d", "#E69F00", "#D55E00")) +
# define axis limits if needed
coord_cartesian(ylim = c(0.1, 1))  +
# define the theme of the boxplot
theme_bw() +  # make the bg white
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), # remove background, frame
axis.line = element_line(colour = "black"))+
# label the axises
xlab("Effector") +
ylab("% disease score") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggp                                 # Draw ggplot2 plot scaled to 1.00
